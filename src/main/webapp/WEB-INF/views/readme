프로젝트 생성 후 에러 표시 날 경우 ----------------------------
properties
 > project facets
   > java 11
   > runtime 
     > apache 체크
     


mysql 연동
dependency 설정하기  ------------------------------------
1. pom.xml 열기
   (의존설정)
     </dependencies> 찾기
   
<< Maven Dependencies에 보면 라이브러리들이 있다.
   그 라이브러리 관리를  pom.xml에서 관리한다.
   그래서 의존 설정한다 또는 dependency 설정한다 라고 말한다
   추가 삭제 등등으로 라이브러리를 관리한다.
   
   단점은 xml은 인기가 없다.
   sts3는  Maven만 가능.
   프로젝트 마다 라이브러리를 설치 해야한다 - 복붙해서 설치
 
2.사용법 
	dependencies 안에
	  dependency 태그를 작성을 하면 알아서 라이브러리를 불러온다
	  오타와 버전을 확인해야한다. 
	  전부 소문자 > 주소 url이라 소문자로 작성
	주석은 <!-- --> html과 같다
	
		<!-- SPRING JDBC 라이브러리 -->
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-jdbc</artifactId>
         <version>4.1.4.RELEASE</version>
      </dependency>
      
      <!-- MySQL JDBC 라이브러리 -->
      <dependency>
         <groupId>mysql</groupId>
         <artifactId>mysql-connector-java</artifactId>
         <version>8.0.31</version>
      </dependency>
      
      <!-- Oracle JDBC 라이브러리  -->
      <dependency>
         <groupId>com.oracle.database.jdbc</groupId>
         <artifactId>ojdbc11</artifactId>
         <version>21.1.0.0</version>
      </dependency>
      
      <!-- MariaDB JDBC 라이브러리 -->
      <dependency>
         <groupId>org.mariadb.jdbc</groupId>
         <artifactId>mariadb-java-client</artifactId>
         <version>3.1.0</version>
      </dependency>
      
      
      
   버전을 찾아서 써줘야 하는 단점이 있다. 구글링 할 것!
   많이 설치하는 버전을 찾아서 작성.
   
   
 한글 필터링 하기  ---------------------------
 모든 웹을 utf-8로 한글처리
 
 1. web.xml 열기	
 	
	</web-app> 태그위에 작성
 	
 	<!-- 한글 처리 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>

		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>


dao, dto, controller, command 만들기 ----


package dao, dto, controller, command
  

controller 만들기 - 컨트롤러
 @Controller 작성
 
 
dto 만들기  - DB보고 만들기
	private int bnum; // 게시판 번호
	private String bname; // 게시판 글쓴이
	private String btitle; // 게시판 글제목
	private String bcontent; // 게시판 글내용
	private String bdate; // 게시판 글 등록일
	private int bhit; // 조회수

	게터 세터 필드 슈퍼 전부 설정
	source 에 있음
	
dao 작성------------------------

	
	String diverName = "com.mysql.jdbc.Driver";
	String url = "jdbc:mysql://localhost:3306/jsp_project";
	String username="root";
	String password ="12345";
	
	게시판 글쓰기 템플
	public void boardWrite(String bname, String btitle, String bcontent) {
		 // 넘버랑 날짜는 자동  
		

		String sql = "INSERT INTO mvc_board(bname, btitle, bcontent,bhit) VALUES (?,?,?,0)";
		
		Connection conn = null;
		PreparedStatement pstmt =null;
		// 리절트셋은 셀렉트문 사용시에만 필요
		
		// 예외처리
		try {
			
		}catch (Exception e) {
			e.printStackTrace();
			// TODO: handle exception
		}finally {
			try {
				if(pstmt != null) {
					pstmt.close();
				}
				if(conn != null) {
			 		conn.close();
				}
				
			} catch (Exception e2) {
				// TODO: handle exception
			}
		}
		
	게시판 글쓰기 추가 	===============
		//게시판 글쓰기 //메서드작성 //매개변수작성
	package com.jbedu.mysql.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;

public class BoardDao {
	
	String driverName = "com.mysql.jdbc.Driver";
	String url = "jdbc:mysql://localhost:3306/jsp_project";
	String username = "root";
	String password = "12345";
	
	//게시판 글쓰기
	public void boardWrite(String bname, String btitle, String bcontent) {
		String sql = "INSERT INTO mvc_board(bname, btitle, bcontent, bhit) VALUES (?,?,?,0)";
		
		Connection conn =null;
		PreparedStatement pstmt = null;
		
		try {
			Class.forName(driverName);
			conn = DriverManager.getConnection(url, username, password);
			pstmt = conn.prepareStatement(sql);
			
			pstmt.setString(1, bname);
			pstmt.setString(2, btitle);
			pstmt.setString(3, bcontent);
			
			pstmt.executeUpdate();
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			try {
				if(pstmt != null) {
					pstmt.close();
				}
				if(conn != null) {
					conn.close();
				}
			} catch (Exception e2) {
				e2.printStackTrace();
			}
		}
	}
	
}
	
	게시판 jsp form 작성 ----
	
	
	컨트롤러 에 @RequestMapping(value="write_form") 작성 ----
	글 작성 후 리스트로 리다이렉트 리턴 ------ 
	
@Controller
public class BoardController {
	@RequestMapping(value="write_form")
	public String write_form() {
		return "write_form";
	}
	@RequestMapping(value="writeOk")
	public String writeOk(HttpServletRequest request, Model model) {
		
		String bname = request.getParameter("bname");
		String btitle = request.getParameter("btitle");
		String bcontent = request.getParameter("bcontent");
		
		BoardDao boardDao = new BoardDao();
		boardDao.boardWrite(bname, btitle, bcontent);
		
		return "redirect:boardList"; // 게시판 리스트로 리다이렉트
	}
	
}

----- 드라이버 에러 발생 이름이 바뀐듯 체크 ------------

포트 번호 확인 3306


mysql-connector-java-8.0.28 또는 mysql-connector-j-9.1.0
mysql  드라이버 구버전 아파치톰캣서버 lib 폴더에 붙여넣기
		java/jdk- 폴더 /lib 에 붙여넣기
		
서버 재부팅

---------------------------------------------
dao 클래스 글목록 가져오기 메소드 boardList 추가

	// 모든 글 리스트 보기 dao
public ArrayList<BoardDto> boardList() {
}

------------------------------------------------
컨트롤러 작성 글작성

	
	@RequestMapping(value="/boardList")
	public String boardList(HttpServletRequest request, Model model) {
		
		//모든 글 목록 가져와서 넘겨주면 
		//가져오기
		BoardDao boardDao = new BoardDao();
		ArrayList<BoardDto> bDtos = boardDao.boardList(); // 모든 글 목록 -> 왜 모든글 목록인지 이해 필요
		
		model.addAttribute("bDtos", bDtos); 		
		
		return "boardList"; // 패킹해서 넘김
	}

boardList jsp 작성 ---------------------------------
